/'
  **시퀀스 다이어그램 (Sequence Diagram)**
  객체 간의 상호작용과 메시지 흐름을 시간 순서대로 보여줍니다.

  **주요 문법:**
  - `actor`: 사용자 같은 외부 참여자
  - `participant`: 내부 시스템이나 객체
  - `->`: 메시지 요청
  - `-->`: 응답
  - `activate`, `deactivate`: 객체 활성화/비활성화
  - `alt`, `else`, `end`: 조건 분기
'/
@startuml "회원가입 프로세스"
actor "사용자" as user
participant "웹 서버" as webServer
participant "인증 서버" as authServer
database "데이터베이스" as db

user -> webServer: 회원가입 요청
activate webServer

webServer -> authServer: 이메일 중복 확인
activate authServer
authServer -> db: 이메일 조회
activate db
db --> authServer: 조회 결과 반환
deactivate db

alt 이메일이 이미 존재할 경우
  authServer --> webServer: 실패 (이미 가입된 이메일)
else 이메일이 존재하지 않을 경우
  authServer --> webServer: 성공
end

deactivate authServer
webServer -> db: 새 회원 정보 저장
activate db
db --> webServer: 저장 완료
deactivate db

webServer -> user: 회원가입 성공 응답
deactivate webServer
@enduml